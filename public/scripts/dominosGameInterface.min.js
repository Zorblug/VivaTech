"use strict";var Domino=Domino||{};Domino.GameInterface=function(e){this.debug=debug("domino.tableGame"),this._players=void 0,this._pile=void 0,this._table=void 0,this._turn=-1,this._currentPlayer=void 0,this.debug("Connect to %s",e),this._socket=io.connect(e+"/domino"),this._events=new ObservableEvents,this._initCallback=void 0},Domino.GameInterface.prototype.init=function(e){"function"==typeof e?this._initCallback=e:this._initCallback=void 0,this.emit("game");var t=this;this._socket.on("init",function(e){t.debug("Initialisation de la partie : %s",JSON.stringify(e)),t._initCallback&&(t._initCallback.call(t,e),t._initCallback=void 0)}),this._socket.on("new_player",function(e){t.debug("Nouveau joueur : %s",JSON.stringify(e)),t._events.fire("new_player",e)}),this._socket.on("start",function(e){t.debug("Debut de partie : %s",JSON.stringify(e)),t._players=e.players,t._pile=e.pile,t._table=e.table,t._turn=e.turn,t._currentPlayer=e.player,t._events.fire("start",e)}),this._socket.on("end",function(e){t.debug("Fin de la partie : %s",JSON.stringify(e)),t._events.fire("end",{winner:e.winner})}),this._socket.on("turn",function(e){t.debug("Tour : %s",JSON.stringify(e)),t._pile=e.pile,t._table=e.table,t._turn=e.turn,t._currentPlayer=e.player,t._events.fire("turn",e)}),this._socket.on("error",function(e){t._events.fire("error",e)}),this._socket.on("close",function(e){t._events.fire("close",e)})},Domino.GameInterface.prototype.emit=function(e,t){this.debug("EMIT %s : %s.",e,JSON.stringify(t)),this._socket.emit(e,t)},Domino.GameInterface.prototype.getTable=function(){return this._table},Domino.GameInterface.prototype.getPile=function(){return this._pile},Domino.GameInterface.prototype.getPlayers=function(){return _.values(this._players)},Domino.GameInterface.prototype.getCurrentPlayers=function(){return this._currentPlayer},Domino.GameInterface.prototype.getTurn=function(){return this._turn},Domino.GameInterface.prototype.onStart=function(e){this._events.addObserver("start",e)},Domino.GameInterface.prototype.onTurnChange=function(e){this._events.addObserver("turn",e)},Domino.GameInterface.prototype.onNewPlayer=function(e){this._events.addObserver("new_player",e)},Domino.GameInterface.prototype.onGameOver=function(e){this._events.addObserver("end",e)},Domino.GameInterface.prototype.onError=function(e){this._events.addObserver("error",e)},Domino.GameInterface.prototype.onClose=function(e){this._events.addObserver("close",e)};